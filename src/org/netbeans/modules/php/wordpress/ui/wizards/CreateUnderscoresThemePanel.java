/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2013 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 *
 * Contributor(s):
 *
 * Portions Copyrighted 2013 Sun Microsystems, Inc.
 */
package org.netbeans.modules.php.wordpress.ui.wizards;

import java.awt.Dialog;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Set;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;

/**
 *
 * @author junichi11
 */
public class CreateUnderscoresThemePanel extends javax.swing.JPanel implements ActionListener, DocumentListener {

    private static final long serialVersionUID = -1760493304572967423L;
    private static final String WS = " "; // NOI18N
    private static final String REGEX = "^[ -.a-zA-Z0-9_]+$"; // NOI18N
    private DialogDescriptor descriptor;
    private Dialog dialog;
    private boolean isOK = false;
    private Set<String> existingThemeNames;

    /**
     * Creates new form CreateUnderscoresThemePanel
     */
    public CreateUnderscoresThemePanel(Set<String> existingThemeNames) {
        initComponents();
        descriptor = new DialogDescriptor(this, "Underscores", true, this); // NOI18N
        themeNameTextField.getDocument().addDocumentListener(this);
        descriptor.setValid(false);
        this.existingThemeNames = existingThemeNames;
    }

    public void showDialog() {
        dialog = DialogDisplayer.getDefault().createDialog(descriptor);
        dialog.setModal(true);
        dialog.pack();
        dialog.setVisible(true);
    }

    public String getAuthor() {
        return authorTextField.getText();
    }

    public String getAuthorUri() {
        return authorUriTextField.getText();
    }

    public String getDescription() {
        return descriptionTextField.getText();
    }

    public String getThemeName() {
        return themeNameTextField.getText();
    }

    public boolean isOK() {
        return isOK;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        themeNameLabel = new javax.swing.JLabel();
        authorLabel = new javax.swing.JLabel();
        authorUriLabel = new javax.swing.JLabel();
        descriptionLabel = new javax.swing.JLabel();
        themeNameTextField = new javax.swing.JTextField();
        authorTextField = new javax.swing.JTextField();
        authorUriTextField = new javax.swing.JTextField();
        descriptionTextField = new javax.swing.JTextField();
        messageLabel = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(themeNameLabel, org.openide.util.NbBundle.getMessage(CreateUnderscoresThemePanel.class, "CreateUnderscoresThemePanel.themeNameLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(authorLabel, org.openide.util.NbBundle.getMessage(CreateUnderscoresThemePanel.class, "CreateUnderscoresThemePanel.authorLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(authorUriLabel, org.openide.util.NbBundle.getMessage(CreateUnderscoresThemePanel.class, "CreateUnderscoresThemePanel.authorUriLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(descriptionLabel, org.openide.util.NbBundle.getMessage(CreateUnderscoresThemePanel.class, "CreateUnderscoresThemePanel.descriptionLabel.text")); // NOI18N

        themeNameTextField.setText(org.openide.util.NbBundle.getMessage(CreateUnderscoresThemePanel.class, "CreateUnderscoresThemePanel.themeNameTextField.text")); // NOI18N

        authorTextField.setText(org.openide.util.NbBundle.getMessage(CreateUnderscoresThemePanel.class, "CreateUnderscoresThemePanel.authorTextField.text")); // NOI18N

        authorUriTextField.setText(org.openide.util.NbBundle.getMessage(CreateUnderscoresThemePanel.class, "CreateUnderscoresThemePanel.authorUriTextField.text")); // NOI18N

        descriptionTextField.setText(org.openide.util.NbBundle.getMessage(CreateUnderscoresThemePanel.class, "CreateUnderscoresThemePanel.descriptionTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(messageLabel, org.openide.util.NbBundle.getMessage(CreateUnderscoresThemePanel.class, "CreateUnderscoresThemePanel.messageLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(messageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(themeNameLabel)
                            .addComponent(authorLabel)
                            .addComponent(authorUriLabel)
                            .addComponent(descriptionLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(themeNameTextField)
                            .addComponent(authorTextField)
                            .addComponent(authorUriTextField)
                            .addComponent(descriptionTextField))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(themeNameLabel)
                    .addComponent(themeNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authorLabel)
                    .addComponent(authorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authorUriLabel)
                    .addComponent(authorUriTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descriptionLabel)
                    .addComponent(descriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(messageLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel authorLabel;
    private javax.swing.JTextField authorTextField;
    private javax.swing.JLabel authorUriLabel;
    private javax.swing.JTextField authorUriTextField;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextField descriptionTextField;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JLabel themeNameLabel;
    private javax.swing.JTextField themeNameTextField;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == DialogDescriptor.OK_OPTION) {
            isOK = true;
        } else {
            isOK = false;
        }
    }

    private void doEnablement() {
        String name = themeNameTextField.getText();
        if (name.isEmpty()
                || name.startsWith(WS)
                || name.endsWith(WS)
                || !name.matches(REGEX)) {
            descriptor.setValid(false);
        } else {
            descriptor.setValid(true);
        }
        name = name.trim();
        if (existingThemeNames.contains(name)) {
            descriptor.setValid(false);
        }
    }

    @Override
    public void insertUpdate(DocumentEvent e) {
        doEnablement();
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        doEnablement();
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        doEnablement();
    }
}
